#!/bin/bash
(return 0 2>/dev/null) && sourced=1 || sourced=0
if [ $sourced == 1 ]; then
	echo "Don't source this file"
	return
fi

# WARNING: this script will destroy data on the selected disk.
# This script can be run by executing the following:
#   curl -sL https://git.io/JJa05 | bash
set -euo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

REPO_URL="https://s3.us-west-1.amazonaws.com/skrisna-arch/repo/x86_64"

if false; then

umount -R /mnt || true

pacman-key --init
pacman-key --populate archlinux

pacman -S --noconfirm --needed reflector dialog grep gptfdisk \
	dosfstools f2fs-tools lvm2

reflector --country US --age 12 --protocol https \
    --sort rate --save /etc/pacman.d/mirrorlist

. $0.input settings

# works only for systemd hosts
(systemctl > /dev/null 2>&1) && timedatectl set-ntp true || true

### Set up logging ###
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")

tf=`mktemp`
. $0.$target/partition $device settings

# boot_path is assumed to be already formatted

nroot=${#root_path[@]}
for (( i=0; i<$nroot; i++ )); do
	wipefs --force --all "${root_path[$i]}"
	pvcreate "${root_path[$i]}"
done

vgcreate ${vg} ${root_path[@]}
lvcreate -L 4G -n ${cryptname}-root -y ${vg}
lvcreate -L 500M -n ${cryptname}-swap -y ${vg}
lvcreate -L 500M -n ${cryptname}-tmp -y ${vg}
lvcreate -L 4G -n ${cryptname}-home -y ${vg}

echo -n $lukspass | cryptsetup luksFormat -vq /dev/${vg}/${cryptname}-root -
echo -n $lukspass | cryptsetup -d- --allow-discards --persistent open /dev/${vg}/${cryptname}-root root

mkfs.f2fs -f /dev/mapper/root
mount /dev/mapper/root /mnt/
mkdir -p /mnt/boot
mount $boot_path /mnt/boot

mkdir -p -m 700 /mnt/etc/luks-keys
dd if=/dev/random of=/mnt/etc/luks-keys/home bs=1 count=256 status=progress
cryptsetup luksFormat -vq /dev/${vg}/${cryptname}-home /mnt/etc/luks-keys/home 
cryptsetup -d /mnt/etc/luks-keys/home --allow-discards --persistent open /dev/${vg}/${cryptname}-home home
mkfs.f2fs -f /dev/mapper/home 
mkdir -p /mnt/home
mount /dev/mapper/home /mnt/home

### Install and configure the basic system ###
cat >>/etc/pacman.conf <<EOF
[skrisna]
SigLevel = Optional TrustAll
Server = $REPO_URL
EOF

#pacstrap /mnt base base-devel linux linux-headers \
#	lvm2 broadcom-wl f2fs-tools wpa_supplicant neovim networkmanager libnm \
#	dkms
# install linux-lts linux-lts-headers
pacstrap /mnt base base-devel linux-lts linux-lts-headers dkms vim lvm2 f2fs-tools

fi
. settings

perl -ni -e 'print unless /^HOOKS\+=\( udev/;' /mnt/etc/mkinitcpio.conf
cat <<_E_ >> /mnt/etc/mkinitcpio.conf
HOOKS+=( udev keyboard keymap lvm2 encrypt filesystems fsck )
_E_
arch-chroot /mnt mkinitcpio -p linux-lts

# Only include / /boot and /home mounts, ignore everything else
genfstab -t PARTUUID /mnt | \
	perl -e ' 
local $/; 
@parts = split(/\n\n/, <>); 
@parts = grep { m@\n\s*\S+\s+(/|/boot|/home)\s+@ } @parts; 
print join("\n\n", @parts), "\n";
' >> /mnt/etc/fstab 
echo "${hostname}" > /mnt/etc/hostname

cat <<_E_ >> /mnt/etc/crypttab
# swap	/dev/${vg}/${cryptname}-swap	/dev/urandom	swap,cipher=aes-xts-plain64,size=256
# tmp	/dev/${vg}/${cryptname}-tmp	/dev/urandom	tmp,cipher=aes-xts-plain64,size=256
home	/dev/${vg}/${cryptname}-home	/etc/luks-keys/home
_E_

cat <<_E_ >> /mnt/etc/fstab
# /dev/mapper/swap        none    swap            sw              0       0
# /dev/mapper/tmp         /tmp    tmpfs           defaults        0       0
_E_

cat >>/mnt/etc/pacman.conf <<EOF
[skrisna]
SigLevel = Optional TrustAll
Server = $REPO_URL
EOF

arch-chroot /mnt bootctl install

cat <<EOF > /mnt/boot/loader/loader.conf
default arch
EOF

cat <<EOF > /mnt/boot/loader/entries/arch.conf
title    Arch Linux LTS
linux    /vmlinuz-linux-lts
initrd   /initramfs-linux-lts.img
options  cryptdevice=UUID=$(blkid -s UUID -o value /dev/${vg}/${cryptname}-root):root root=/dev/mapper/root rw
EOF

echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf

# Modify mkinitcpio and run mkinitcpio -p linux

# arch-chroot /mnt useradd -mU -s /usr/bin/zsh -G wheel,uucp,video,audio,storage,games,input "$user"
# arch-chroot /mnt chsh -s /usr/bin/zsh
# echo "$user:$password" | chpasswd --root /mnt
echo "root:$password" | chpasswd --root /mnt
